package barakat.app.aggregator.entity.app.cron;

import barakat.app.aggregator.entity.app.CronProperties;
import barakat.app.aggregator.entity.app.CronPropertiesException;
import barakat.app.aggregator.entity.app.TcTransportCopySchedule;
import barakat.app.aggregator.entity.app.repository.mirrorgen.WscalesTcRepository;
import barakat.app.aggregator.entity.tctransport.model.gen.Wscales;
import barakat.app.aggregator.entity.tctransport.repository.WscalesCustomRepository;
import lombok.extern.log4j.Log4j2;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.scheduling.annotation.Scheduled;

import java.util.List;

/**
* Generated by Spring Data Generator on 26/05/2022
*/
@Log4j2
@Configuration
public class WscalesShedule implements TcTransportCopySchedule {
    @Autowired
    WscalesCustomRepository repository;
    @Autowired
    WscalesTcRepository tcRepository;

    private String lastWscalesId = "wscales.id.last";

    @Scheduled(fixedDelay = 1000*60*5)
    private void job() throws CronPropertiesException {

        String id = CronProperties.get(lastWscalesId);
        if (id == null){
            CronProperties.save(lastWscalesId, "0");
        }else{
            List<Wscales> eventlogs = repository.queryById(Integer.valueOf(id));
            tcRepository.saveAll(eventlogs);
            if(eventlogs.size() != 0){
                CronProperties.save(lastWscalesId, eventlogs.get(eventlogs.size()-1).getId().toString());
            }
        }
    }
}